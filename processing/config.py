import numpy as np

# Algorithm Configurations
CIR_UPSAMPLE = 8
CIR_ALIGN_TO = 1
FFT_BOUND = 90
theta_vals = np.linspace(-(FFT_BOUND / 90) * np.pi / 2, (FFT_BOUND / 90) * np.pi / 2, 180)
phi_vals = np.linspace(-(FFT_BOUND / 90) * np.pi / 2, (FFT_BOUND / 90) * np.pi / 2, 180)

# Hardware Configurations
_d = 0.033364  # Distance between adjacent antennas
_d1 = 0  # Distance between origin and Ant 3
_d2 = _d  # Distance between origin and Ant 4
# Note: Set the corner of the board (between ant 3 and 4) as origin
ant_pos = -1 * np.array([_d1 + 3 * _d, _d1 + 2 * _d, _d1 + 1 * _d, _d1,
                         _d2, _d2 + _d, _d2 + 2 * _d, _d2 + 3 * _d])

# Firmware Configurations
CIR_LEN = 7
_f = 4492.8e6  # Ch1: 3494.4e6 Ch3: 4492.8e6  Ch5: 6489.6
_c = 299792458 / 1.0003  # Air
lamb = _c / _f

# CIR Interpolation
# Generated by MATLAB: b = rcosdesign(rolloff, span, sps); rolloff=0.25, span=16
CIR_INTERP_B = {
    8: np.array(
        [-0.00178639762948631, -0.00155870891521665, -0.000922036038762769, 6.62031052265362e-06, 0.00103044085161447,
         0.00191388559033746, 0.00243598493785789, 0.00244400398906142, 0.00189476081655801, 0.000872921089200887,
         -0.000419709629504921, -0.00170344065767972, -0.00268126358080306, -0.00310793749585022, -0.00285184386126175,
         -0.00193439405747001, -0.000535919288845883, 0.00103596532019569, 0.00241097910976235, 0.00324106979302367,
         0.00328702940012335, 0.00248629239803016, 0.000984025097746820, -0.000883327845517629, -0.00265266514318121,
         -0.00383636150297830, -0.00404139377562236, -0.00307889018257000, -0.00103701475424289, 0.00170425033241046,
         0.00452673801836021, 0.00669183962077948, 0.00750287004384248, 0.00648014375734146, 0.00351020737564072,
         -0.00106815027261384, -0.00646896467885034, -0.0115664335073279, -0.0150947784610852, -0.0159096812526340,
         -0.0132633257159061, -0.00703622071963034, 0.00212907248421584, 0.0128337651111222, 0.0230863934085282,
         0.0306128663043164, 0.0332715117147205, 0.0295063781830588, 0.0187571751096062, 0.00174348919144343,
         -0.0194443899631484, -0.0414871059817277, -0.0602111843354427, -0.0711566623812208, -0.0702593919791229,
         -0.0545437726214533, -0.0227119727991704, 0.0244748089735988, 0.0840994799974748, 0.151310515791484,
         0.219845441524588, 0.282790431364563, 0.333469700685869, 0.366334267559297, 0.377716366526600,
         0.366334267559297,
         0.333469700685869, 0.282790431364563, 0.219845441524588, 0.151310515791484, 0.0840994799974748,
         0.0244748089735988,
         -0.0227119727991704, -0.0545437726214533, -0.0702593919791229, -0.0711566623812208, -0.0602111843354427,
         -0.0414871059817277, -0.0194443899631484, 0.00174348919144343, 0.0187571751096062, 0.0295063781830588,
         0.0332715117147205, 0.0306128663043164, 0.0230863934085282, 0.0128337651111222, 0.00212907248421584,
         -0.00703622071963034, -0.0132633257159061, -0.0159096812526340, -0.0150947784610852, -0.0115664335073279,
         -0.00646896467885034, -0.00106815027261384, 0.00351020737564072, 0.00648014375734146, 0.00750287004384248,
         0.00669183962077948, 0.00452673801836021, 0.00170425033241046, -0.00103701475424289, -0.00307889018257000,
         -0.00404139377562236, -0.00383636150297830, -0.00265266514318121, -0.000883327845517629, 0.000984025097746820,
         0.00248629239803016, 0.00328702940012335, 0.00324106979302367, 0.00241097910976235, 0.00103596532019569,
         -0.000535919288845883, -0.00193439405747001, -0.00285184386126175, -0.00310793749585022, -0.00268126358080306,
         -0.00170344065767972, -0.000419709629504921, 0.000872921089200887, 0.00189476081655801, 0.00244400398906142,
         0.00243598493785789, 0.00191388559033746, 0.00103044085161447, 6.62031052265362e-06, -0.000922036038762769,
         -0.00155870891521665, -0.00178639762948631])
}
